generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(cuid())
  email      String    @unique
  name       String
  password   String
  tasks      Task[]
  Sessions   Session[]
  role       Role      @default(USER)
  lastLogin  DateTime?
  profile    String?   @default("")
  bio        String?   @default("")
  isActive   Boolean   @default(true)
  isVerified Boolean   @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  PasswordResetToken PasswordResetToken[]

  Company Company[]
}

enum Role {
  USER
  ADMIN
  REVIEWER
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  completed   Boolean  @default(false)
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String   @default(cuid())
  updatedBy   String   @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@id([identifier, token])
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expires   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Company {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}
